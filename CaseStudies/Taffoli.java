
import org.cprover.CProver;

public class Taffoli {
  
  public Taffoli() {
    super();
  }
    /*@
      ensures \result == (b1 && b2 && b3); 
   */

  public boolean testTaffoli(boolean b1, boolean b2, boolean b3) {
    float[] q0 = new float[]{1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    float[] q1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    if (b1) {
      {
      }
      q0 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
      q1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    }
    if (b2) {
      {
      }
      q0 = new float[]{q0[8], q0[9], q0[10], q0[11], q0[12], q0[13], q0[14], q0[15], q0[0], q0[1], q0[2], q0[3], q0[4], q0[5], q0[6], q0[7], q0[24], q0[25], q0[26], q0[27], q0[28], q0[29], q0[30], q0[31], q0[16], q0[17], q0[18], q0[19], q0[20], q0[21], q0[22], q0[23]};
      q1 = new float[]{q1[8], q1[9], q1[10], q1[11], q1[12], q1[13], q1[14], q1[15], q1[0], q1[1], q1[2], q1[3], q1[4], q1[5], q1[6], q1[7], q1[24], q1[25], q1[26], q1[27], q1[28], q1[29], q1[30], q1[31], q1[16], q1[17], q1[18], q1[19], q1[20], q1[21], q1[22], q1[23]};
    }
    if (b3) {
      {
      }
      q0 = new float[]{q0[4], q0[5], q0[6], q0[7], q0[0], q0[1], q0[2], q0[3], q0[12], q0[13], q0[14], q0[15], q0[8], q0[9], q0[10], q0[11], q0[20], q0[21], q0[22], q0[23], q0[16], q0[17], q0[18], q0[19], q0[28], q0[29], q0[30], q0[31], q0[24], q0[25], q0[26], q0[27]};
      q1 = new float[]{q1[4], q1[5], q1[6], q1[7], q1[0], q1[1], q1[2], q1[3], q1[12], q1[13], q1[14], q1[15], q1[8], q1[9], q1[10], q1[11], q1[20], q1[21], q1[22], q1[23], q1[16], q1[17], q1[18], q1[19], q1[28], q1[29], q1[30], q1[31], q1[24], q1[25], q1[26], q1[27]};
    }
    q0 = new float[]{q0[0], q0[1], q0[4], q0[5], q0[2], q0[3], q0[6], q0[7], q0[8], q0[9], q0[12], q0[13], q0[10], q0[11], q0[14], q0[15], q0[16], q0[17], q0[20], q0[21], q0[18], q0[19], q0[22], q0[23], q0[24], q0[25], q0[28], q0[29], q0[26], q0[27], q0[30], q0[31]};
    q1 = new float[]{q1[0], q1[1], q1[4], q1[5], q1[2], q1[3], q1[6], q1[7], q1[8], q1[9], q1[12], q1[13], q1[10], q1[11], q1[14], q1[15], q1[16], q1[17], q1[20], q1[21], q1[18], q1[19], q1[22], q1[23], q1[24], q1[25], q1[28], q1[29], q1[26], q1[27], q1[30], q1[31]};
    q0 = new float[]{q0[0], q0[1], q0[2], q0[3], q0[4], q0[5], q0[6], q0[7], q0[8], q0[9], q0[10], q0[11], q0[12], q0[13], q0[14], q0[15], q0[16], q0[17], q0[18], q0[19], q0[20], q0[21], q0[22], q0[23], q0[28], q0[29], q0[30], q0[31], q0[24], q0[25], q0[26], q0[27]};
    q1 = new float[]{q1[0], q1[1], q1[2], q1[3], q1[4], q1[5], q1[6], q1[7], q1[8], q1[9], q1[10], q1[11], q1[12], q1[13], q1[14], q1[15], q1[16], q1[17], q1[18], q1[19], q1[20], q1[21], q1[22], q1[23], q1[28], q1[29], q1[30], q1[31], q1[24], q1[25], q1[26], q1[27]};
    q0 = new float[]{q0[0], q0[1], q0[4], q0[5], q0[2], q0[3], q0[6], q0[7], q0[8], q0[9], q0[12], q0[13], q0[10], q0[11], q0[14], q0[15], q0[16], q0[17], q0[20], q0[21], q0[18], q0[19], q0[22], q0[23], q0[24], q0[25], q0[28], q0[29], q0[26], q0[27], q0[30], q0[31]};
    q1 = new float[]{q1[0], q1[1], q1[4], q1[5], q1[2], q1[3], q1[6], q1[7], q1[8], q1[9], q1[12], q1[13], q1[10], q1[11], q1[14], q1[15], q1[16], q1[17], q1[20], q1[21], q1[18], q1[19], q1[22], q1[23], q1[24], q1[25], q1[28], q1[29], q1[26], q1[27], q1[30], q1[31]};
    q0 = new float[]{q0[0], q0[1], q0[2], q0[3], q0[4], q0[5], q0[7], q0[6], q0[8], q0[9], q0[10], q0[11], q0[12], q0[13], q0[15], q0[14], q0[16], q0[17], q0[18], q0[19], q0[20], q0[21], q0[23], q0[22], q0[24], q0[25], q0[26], q0[27], q0[28], q0[29], q0[31], q0[30]};
    q1 = new float[]{q1[0], q1[1], q1[2], q1[3], q1[4], q1[5], q1[7], q1[6], q1[8], q1[9], q1[10], q1[11], q1[12], q1[13], q1[15], q1[14], q1[16], q1[17], q1[18], q1[19], q1[20], q1[21], q1[23], q1[22], q1[24], q1[25], q1[26], q1[27], q1[28], q1[29], q1[31], q1[30]};
    q0 = new float[]{q0[0], q0[1], q0[4], q0[5], q0[2], q0[3], q0[6], q0[7], q0[8], q0[9], q0[12], q0[13], q0[10], q0[11], q0[14], q0[15], q0[16], q0[17], q0[20], q0[21], q0[18], q0[19], q0[22], q0[23], q0[24], q0[25], q0[28], q0[29], q0[26], q0[27], q0[30], q0[31]};
    q1 = new float[]{q1[0], q1[1], q1[4], q1[5], q1[2], q1[3], q1[6], q1[7], q1[8], q1[9], q1[12], q1[13], q1[10], q1[11], q1[14], q1[15], q1[16], q1[17], q1[20], q1[21], q1[18], q1[19], q1[22], q1[23], q1[24], q1[25], q1[28], q1[29], q1[26], q1[27], q1[30], q1[31]};
    q0 = new float[]{q0[0], q0[1], q0[2], q0[3], q0[4], q0[5], q0[6], q0[7], q0[8], q0[9], q0[10], q0[11], q0[12], q0[13], q0[14], q0[15], q0[16], q0[17], q0[18], q0[19], q0[20], q0[21], q0[22], q0[23], q0[28], q0[29], q0[30], q0[31], q0[24], q0[25], q0[26], q0[27]};
    q1 = new float[]{q1[0], q1[1], q1[2], q1[3], q1[4], q1[5], q1[6], q1[7], q1[8], q1[9], q1[10], q1[11], q1[12], q1[13], q1[14], q1[15], q1[16], q1[17], q1[18], q1[19], q1[20], q1[21], q1[22], q1[23], q1[28], q1[29], q1[30], q1[31], q1[24], q1[25], q1[26], q1[27]};
    float[] probs = new float[]{q0[0] * q0[0] + q1[0] * q1[0], q0[1] * q0[1] + q1[1] * q1[1], q0[2] * q0[2] + q1[2] * q1[2], q0[3] * q0[3] + q1[3] * q1[3], q0[4] * q0[4] + q1[4] * q1[4], q0[5] * q0[5] + q1[5] * q1[5], q0[6] * q0[6] + q1[6] * q1[6], q0[7] * q0[7] + q1[7] * q1[7], q0[8] * q0[8] + q1[8] * q1[8], q0[9] * q0[9] + q1[9] * q1[9], q0[10] * q0[10] + q1[10] * q1[10], q0[11] * q0[11] + q1[11] * q1[11], q0[12] * q0[12] + q1[12] * q1[12], q0[13] * q0[13] + q1[13] * q1[13], q0[14] * q0[14] + q1[14] * q1[14], q0[15] * q0[15] + q1[15] * q1[15], q0[16] * q0[16] + q1[16] * q1[16], q0[17] * q0[17] + q1[17] * q1[17], q0[18] * q0[18] + q1[18] * q1[18], q0[19] * q0[19] + q1[19] * q1[19], q0[20] * q0[20] + q1[20] * q1[20], q0[21] * q0[21] + q1[21] * q1[21], q0[22] * q0[22] + q1[22] * q1[22], q0[23] * q0[23] + q1[23] * q1[23], q0[24] * q0[24] + q1[24] * q1[24], q0[25] * q0[25] + q1[25] * q1[25], q0[26] * q0[26] + q1[26] * q1[26], q0[27] * q0[27] + q1[27] * q1[27], q0[28] * q0[28] + q1[28] * q1[28], q0[29] * q0[29] + q1[29] * q1[29], q0[30] * q0[30] + q1[30] * q1[30], q0[31] * q0[31] + q1[31] * q1[31]};
    float highestProb = 0.0F;
    for (int loopVarI = 0; loopVarI <= 31; ++loopVarI) {
      if (probs[loopVarI] > highestProb) highestProb = probs[loopVarI];
    }
    int randIdx = CProver.nondetInt();
    /*@ assume 0 <= randIdx && randIdx < 32;*/
    int tmp_measure_var = 0;
    if (probs[randIdx] > highestProb - 0.02F) tmp_measure_var = randIdx; else {
      /*@ assume false;*/
    }
    return tmp_measure_var == 27;
  }
    /*@
      ensures \result == (b1 && b2 && b3); 
   */

  public boolean testTaffoliBroken(boolean b1, boolean b2, boolean b3) {
    float[] q0 = new float[]{1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    float[] q1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    if (b1) {
      {
      }
      q0 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
      q1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    }
    if (b2) {
      {
      }
      q0 = new float[]{q0[4], q0[5], q0[6], q0[7], q0[0], q0[1], q0[2], q0[3], q0[12], q0[13], q0[14], q0[15], q0[8], q0[9], q0[10], q0[11]};
      q1 = new float[]{q1[4], q1[5], q1[6], q1[7], q1[0], q1[1], q1[2], q1[3], q1[12], q1[13], q1[14], q1[15], q1[8], q1[9], q1[10], q1[11]};
    }
    if (b3) {
      {
      }
      q0 = new float[]{q0[2], q0[3], q0[0], q0[1], q0[6], q0[7], q0[4], q0[5], q0[10], q0[11], q0[8], q0[9], q0[14], q0[15], q0[12], q0[13]};
      q1 = new float[]{q1[2], q1[3], q1[0], q1[1], q1[6], q1[7], q1[4], q1[5], q1[10], q1[11], q1[8], q1[9], q1[14], q1[15], q1[12], q1[13]};
    }
    q0 = new float[]{q0[0], q0[2], q0[1], q0[3], q0[4], q0[6], q0[5], q0[7], q0[8], q0[10], q0[9], q0[11], q0[12], q0[14], q0[13], q0[15]};
    q1 = new float[]{q1[0], q1[2], q1[1], q1[3], q1[4], q1[6], q1[5], q1[7], q1[8], q1[10], q1[9], q1[11], q1[12], q1[14], q1[13], q1[15]};
    q0 = new float[]{q0[0], q0[1], q0[2], q0[3], q0[4], q0[5], q0[6], q0[7], q0[8], q0[9], q0[10], q0[11], q0[14], q0[15], q0[12], q0[13]};
    q1 = new float[]{q1[0], q1[1], q1[2], q1[3], q1[4], q1[5], q1[6], q1[7], q1[8], q1[9], q1[10], q1[11], q1[14], q1[15], q1[12], q1[13]};
    q0 = new float[]{q0[0], q0[1], q0[3], q0[2], q0[4], q0[5], q0[7], q0[6], q0[8], q0[9], q0[11], q0[10], q0[12], q0[13], q0[15], q0[14]};
    q1 = new float[]{q1[0], q1[1], q1[3], q1[2], q1[4], q1[5], q1[7], q1[6], q1[8], q1[9], q1[11], q1[10], q1[12], q1[13], q1[15], q1[14]};
    q0 = new float[]{q0[0], q0[2], q0[1], q0[3], q0[4], q0[6], q0[5], q0[7], q0[8], q0[10], q0[9], q0[11], q0[12], q0[14], q0[13], q0[15]};
    q1 = new float[]{q1[0], q1[2], q1[1], q1[3], q1[4], q1[6], q1[5], q1[7], q1[8], q1[10], q1[9], q1[11], q1[12], q1[14], q1[13], q1[15]};
    q0 = new float[]{q0[1], q0[0], q0[3], q0[2], q0[5], q0[4], q0[7], q0[6], q0[9], q0[8], q0[11], q0[10], q0[13], q0[12], q0[15], q0[14]};
    q1 = new float[]{q1[1], q1[0], q1[3], q1[2], q1[5], q1[4], q1[7], q1[6], q1[9], q1[8], q1[11], q1[10], q1[13], q1[12], q1[15], q1[14]};
    q0 = new float[]{q0[0], q0[2], q0[1], q0[3], q0[4], q0[6], q0[5], q0[7], q0[8], q0[10], q0[9], q0[11], q0[12], q0[14], q0[13], q0[15]};
    q1 = new float[]{q1[0], q1[2], q1[1], q1[3], q1[4], q1[6], q1[5], q1[7], q1[8], q1[10], q1[9], q1[11], q1[12], q1[14], q1[13], q1[15]};
    q0 = new float[]{q0[0], q0[1], q0[2], q0[3], q0[4], q0[5], q0[6], q0[7], q0[8], q0[9], q0[10], q0[11], q0[14], q0[15], q0[12], q0[13]};
    q1 = new float[]{q1[0], q1[1], q1[2], q1[3], q1[4], q1[5], q1[6], q1[7], q1[8], q1[9], q1[10], q1[11], q1[14], q1[15], q1[12], q1[13]};
    q0 = new float[]{q0[0], q0[2], q0[1], q0[3], q0[4], q0[6], q0[5], q0[7], q0[8], q0[10], q0[9], q0[11], q0[12], q0[14], q0[13], q0[15]};
    q1 = new float[]{q1[0], q1[2], q1[1], q1[3], q1[4], q1[6], q1[5], q1[7], q1[8], q1[10], q1[9], q1[11], q1[12], q1[14], q1[13], q1[15]};
    boolean $$_tmp_measureVar1;
    if (q0[1] * q0[1] + q1[1] * q1[1] + q0[3] * q0[3] + q1[3] * q1[3] + q0[5] * q0[5] + q1[5] * q1[5] + q0[7] * q0[7] + q1[7] * q1[7] + q0[9] * q0[9] + q1[9] * q1[9] + q0[11] * q0[11] + q1[11] * q1[11] + q0[13] * q0[13] + q1[13] * q1[13] + q0[15] * q0[15] + q1[15] * q1[15] > q0[0] * q0[0] + q1[0] * q1[0] + q0[2] * q0[2] + q1[2] * q1[2] + q0[4] * q0[4] + q1[4] * q1[4] + q0[6] * q0[6] + q1[6] * q1[6] + q0[8] * q0[8] + q1[8] * q1[8] + q0[10] * q0[10] + q1[10] * q1[10] + q0[12] * q0[12] + q1[12] * q1[12] + q0[14] * q0[14] + q1[14] * q1[14]) {
      q0 = new float[]{0.0F, q0[1], 0.0F, q0[3], 0.0F, q0[5], 0.0F, q0[7], 0.0F, q0[9], 0.0F, q0[11], 0.0F, q0[13], 0.0F, q0[15]};
      q1 = new float[]{0.0F, q1[1], 0.0F, q1[3], 0.0F, q1[5], 0.0F, q1[7], 0.0F, q1[9], 0.0F, q1[11], 0.0F, q1[13], 0.0F, q1[15]};
      $$_tmp_measureVar1 = true;
    } else {
      q0 = new float[]{q0[0], 0.0F, q0[2], 0.0F, q0[4], 0.0F, q0[6], 0.0F, q0[8], 0.0F, q0[10], 0.0F, q0[12], 0.0F, q0[14], 0.0F};
      q1 = new float[]{q1[0], 0.0F, q1[2], 0.0F, q1[4], 0.0F, q1[6], 0.0F, q1[8], 0.0F, q1[10], 0.0F, q1[12], 0.0F, q1[14], 0.0F};
      $$_tmp_measureVar1 = false;
    }
    return $$_tmp_measureVar1;
  }
}